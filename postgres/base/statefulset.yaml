apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres-postgresql
  labels:
    app: postgres-postgresql
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: primary
      app.kubernetes.io/instance: postgres
      app.kubernetes.io/name: postgresql
  template:
    metadata:
      name: postgres-postgresql
      annotations:
    spec:
      serviceAccountName: default
      hostNetwork: false
      hostIPC: false
      initContainers:
      containers:
      - name: postgresql
        image: docker.io/bitnami/postgresql:14.5.0-debian-11-r24
        ports:
        - name: tcp-postgresql
          containerPort: 5432
        env:
        - name: BITNAMI_DEBUG
          value: "false"
        - name: POSTGRESQL_PORT_NUMBER
          value: "5432"
        - name: POSTGRESQL_VOLUME_DIR
          value: "/bitnami/postgresql"
        - name: PGDATA
          value: "/bitnami/postgresql/data"
        # Authentication
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secrets
              key: POSTGRES_PASSWORD
        # Replication
        # Initdb
        # Standby
        # LDAP
        - name: POSTGRESQL_ENABLE_LDAP
          value: "no"
        # TLS
        - name: POSTGRESQL_ENABLE_TLS
          value: "no"
        # Audit
        - name: POSTGRESQL_LOG_HOSTNAME
          value: "false"
        - name: POSTGRESQL_LOG_CONNECTIONS
          value: "false"
        - name: POSTGRESQL_LOG_DISCONNECTIONS
          value: "false"
        - name: POSTGRESQL_PGAUDIT_LOG_CATALOG
          value: "off"
        # Others
        - name: POSTGRESQL_CLIENT_MIN_MESSAGES
          value: "error"
        - name: POSTGRESQL_SHARED_PRELOAD_LIBRARIES
          value: "pgaudit"
        resources:
          limits: {}
          requests:
            cpu: 250m
            memory: 256Mi
        volumeMounts:
        - name: dshm
          mountPath: /data/pv0001/dev/shm
        - name: data
          mountPath: /data/pv0001/bitnami/postgresql
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - exec pg_isready -U "postgres" -h 127.0.0.1 -p 5432
          failureThreshold: 6
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - -e
            - |
              exec pg_isready -U "postgres" -h 127.0.0.1 -p 5432
              [ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]
          failureThreshold: 6
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        imagePullPolicy: "IfNotPresent"
        securityContext:
          runAsUser: 1001
      volumes:
      - name: dshm
        emptyDir:
          medium: Memory
      affinity:
        nodeAffinity:
        podAffinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/component: primary
                  app.kubernetes.io/instance: postgres
                  app.kubernetes.io/name: postgresql
              topologyKey: kubernetes.io/hostname
            weight: 1
      securityContext:
        fsGroup: 1001
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      resources:
        requests:
          storage: "1Gi"
      accessModes:
      - "ReadWriteOnce"
  serviceName: postgres-postgresql-hl
  updateStrategy:
    type: RollingUpdate
    rollingUpdate: {}
