apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: keycloak
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: keycloakx
      app.kubernetes.io/instance: keycloak-x
  replicas: 2
  serviceName: keycloak-headless
  podManagementPolicy: OrderedReady
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: keycloakx
        app.kubernetes.io/instance: keycloak-x
    spec:
      containers:
        - name: keycloak
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
          image: "quay.io/keycloak/keycloak:19.0.3"
          imagePullPolicy: IfNotPresent
          command:
            - "/opt/keycloak/bin/kc.sh"
            - "--verbose start"
          args:
            []
          env:
            - name: KC_HOSTNAME_STRICT_HTTPS
              value: "false"
            - name: KC_HTTP_RELATIVE_PATH
              value: /auth
            - name: KC_CACHE
              value: "ispn"
            - name: KC_CACHE_STACK
              value: "kubernetes"
            - name: KC_PROXY
              value: edge
            - name: KC_METRICS_ENABLED
              value: "true"
            - name: KC_HTTP_ENABLED
              value: "true"
            - name: KC_LOG_LEVEL
              value: "INFO,org.infinispan:INFO,org.jgroups:INFO"
            - name: JAVA_OPTS_APPEND
              value: -Djgroups.dns.query=keycloak-headless
            - name: JAVA_TOOL_OPTIONS
              value: -XX:+UseContainerSupport -XX:MaxRAMPercentage=50.0
          envFrom: []
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: https
              containerPort: 8443
              protocol: TCP
          livenessProbe:
            httpGet:
              path: '/auth/'
              port: http
            initialDelaySeconds: 0
            timeoutSeconds: 5
            
          readinessProbe:
            httpGet:
              path: '/auth/realms/master'
              port: http
            initialDelaySeconds: 10
            timeoutSeconds: 1
            
          startupProbe:
            httpGet:
              path: '/auth/'
              port: http
            initialDelaySeconds: 15
            timeoutSeconds: 1
            failureThreshold: 60
            periodSeconds: 5
            
          resources:
            {}
          volumeMounts:
      serviceAccountName: keycloak
      securityContext:
        fsGroup: 1000
      enableServiceLinks: true
      restartPolicy: Always
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/name: keycloakx
                  app.kubernetes.io/instance: keycloak-x
                matchExpressions:
                  - key: app.kubernetes.io/component
                    operator: NotIn
                    values:
                      - test
              topologyKey: kubernetes.io/hostname
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: keycloakx
                    app.kubernetes.io/instance: keycloak-x
                  matchExpressions:
                    - key: app.kubernetes.io/component
                      operator: NotIn
                      values:
                        - test
                topologyKey: topology.kubernetes.io/zone
        
      terminationGracePeriodSeconds: 60
      volumes: